name: CD
on:
  workflow_call:
    inputs:
      run_id:
        description: 'Target Run'
        required: true
        type: string
      release:
        required: true
        type: boolean
        default: false

jobs:
  check:
    strategy:
      fail-fast: false
      # Syntax https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
      matrix:
        # Due to https://github.com/actions/runner/issues/849, we have to use quotes for 'n.0'
        dprint-version: [
          '', # empty means to latest: https://github.com/dprint/check/blob/2f1cf31537886c3bfb05591c031f7744e48ba8a1/action.yml#L8
          '0.50.1', # selfup {"extract":"\\d[^']+","replacer":["dprint", "--version"], "nth": 2}
        ]
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    # Don't use `nix develop` in this steps to avoid other devshell tools and make faster to run
    steps:
      - uses: actions/checkout@v4
      - name: Install dprint
        run: |
          # Don't use quotation for dprint-version, it will be broken for empty(latest) pattern.
          curl -fsSL https://dprint.dev/install.sh | sh -s ${{ matrix.dprint-version }} > /dev/null 2>&1
          echo "/home/runner/.dprint/bin" >> "$GITHUB_PATH"
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: '3.44.0' # selfup {"extract":"\\d\\.\\d+\\.\\d+","replacer":["task", "--version"]}
      - name: Download pre-built plugin
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh run download '${{ inputs.run_id }}'
          tree dist
      - name: Make sure dependencies
        run: |
          dprint --version
          task --version
          diff --version
      - name: Test
        env:
          PLUGIN_PATH: '${{ github.workspace }}/dist/lib/plugin.wasm'
          SKIP_BUILD: 'true'
        run:
          task test
  release:
    if: inputs.release
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    needs: [check]
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: |
          gh run download '${{ inputs.run_id }}' --repo '${{ github.repository }}'
          tree dist
      - run: |
          gh release create --repo '${{ github.repository }}' --verify-tag "$GITHUB_REF_NAME" --title "$GITHUB_REF_NAME" dist/lib/plugin.wasm dist/share/schema.json
