# https://taskfile.dev

version: '3'

env:
  PLUGIN_DIR: '{{.USER_WORKING_DIR}}/target/wasm32-unknown-unknown/release'

tasks:
  default:
    deps:
      - check
      - build
  build: # Prefer cargo cache rather than go-task cache feature
    env:
      SKIP_BUILD: 'false' # Don't use "$CI" for this purpose
    status:
      - |
          [ "$SKIP_BUILD" == 'true' ]
    cmds:
      - cargo build --release --target=wasm32-unknown-unknown
  check:
    deps:
      - test
      - lint
  update-jsonschema:
    cmds:
      - './scripts/normalize_json_schema.bash'
  test:
    deps:
      - test-e2e-default
      - test-e2e-all
      - test-e2e-with_global_config
    # cmds:
    #   - cargo test # There is no test. If adding here, required to update GitHub Actions workflow
  test-e2e-*:
    deps:
      - build
    vars:
      TESTNAME: '{{index .MATCH 0}}'
    cmds:
      - cd 'tests/{{.TESTNAME}}' && dprint check --plugins="$PLUGIN_DIR/dprint_plugin_typstyle.wasm" expected.typ
      - cd 'tests/{{.TESTNAME}}' && diff <(cat ../raw.typ | dprint fmt --stdin ../raw.typ --plugins="$PLUGIN_DIR/dprint_plugin_typstyle.wasm") expected.typ
  validate-jsonschema:
    deps:
      - 'update-jsonschema'
    cmds:
      - 'scripts/test-jsonschema.bash'
  bump-fixtures-*:
    deps:
      - build
    vars:
      TESTNAME: '{{index .MATCH 0}}'
    cmds:
      - cd 'tests/{{.TESTNAME}}' && cat ../raw.typ | dprint fmt --stdin ../raw.typ --plugins="$PLUGIN_DIR/dprint_plugin_typstyle.wasm" > expected.typ
  bump-fixtures:
    deps:
      - bump-fixtures-default
      - bump-fixtures-all
      - bump-fixtures-with_global_config
  fmt:
    cmds:
      - cargo fmt
      - dprint fmt
      - git ls-files '*.nix' | xargs nix fmt
  lint:
    cmds:
      - cargo clippy
      - dprint check
      - typos . .github .vscode
      # nix fmt doesn't have check: https://github.com/NixOS/nix/issues/6918
      - git ls-files '*.nix' | xargs nixfmt --check
      - git ls-files | xargs selfup list -check
  selfup:
    cmds:
      - git ls-files | xargs selfup run
  deps:
    cmds:
      - rustc --version
      - cargo --version
      - rust-analyzer --version
      - clippy-driver --version
      - rustfmt --version
      - dprint --version
      - nix --version
      - nil --version
      - nixfmt --version
      - task --version
      - typos --version
      - typst --version
      - typstyle --version
      - selfup -version
